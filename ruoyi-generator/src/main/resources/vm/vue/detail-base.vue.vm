<template>
    <div>
        <el-form ref="form" :model="form" :rules="rules"  :disabled="pageDisabled"  label-width="80px">
            #foreach($column in $columns)
                #set($field=$column.javaField)
                #if($column.insert && !$column.pk)
                    #if(($column.usableColumn) || (!$column.superColumn))
                        #set($parentheseIndex=$column.columnComment.indexOf("（"))
                        #if($parentheseIndex != -1)
                            #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                        #else
                            #set($comment=$column.columnComment)
                        #end
                        #set($dictType=$column.dictType)
                        #if($column.htmlType == "input")
                            <el-form-item label="${comment}" prop="${field}">
                                <el-input v-model="form.${field}" placeholder="请输入${comment}" />
                            </el-form-item>
                        #elseif($column.htmlType == "editor")
                            <el-form-item label="${comment}">
                                <editor v-model="form.${field}" :min-height="192"/>
                            </el-form-item>
                        #elseif($column.htmlType == "select" && "" != $dictType)
                            <el-form-item label="${comment}" prop="${field}">
                                <el-select v-model="form.${field}" placeholder="请选择${comment}">
                                    <el-option
                                            v-for="dict in ${field}Options"
                                            :key="dict.dictValue"
                                            :label="dict.dictLabel"
                                            #if($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.dictValue)"#else:value="dict.dictValue"#end

                                    ></el-option>
                                </el-select>
                            </el-form-item>
                        #elseif($column.htmlType == "select" && $dictType)
                            <el-form-item label="${comment}" prop="${field}">
                                <el-select v-model="form.${field}" placeholder="请选择${comment}">
                                    <el-option label="请选择字典生成" value="" />
                                </el-select>
                            </el-form-item>
                        #elseif($column.htmlType == "checkbox" && "" != $dictType)
                            <el-form-item label="${comment}">
                                <el-checkbox-group v-model="form.${field}">
                                    <el-checkbox
                                            v-for="dict in ${field}Options"
                                            :key="dict.dictValue"
                                            :label="dict.dictValue">
                                        {{dict.dictLabel}}
                                    </el-checkbox>
                                </el-checkbox-group>
                            </el-form-item>
                        #elseif($column.htmlType == "checkbox" && $dictType)
                            <el-form-item label="${comment}">
                                <el-checkbox-group v-model="form.${field}">
                                    <el-checkbox>请选择字典生成</el-checkbox>
                                </el-checkbox-group>
                            </el-form-item>
                        #elseif($column.htmlType == "radio" && "" != $dictType)
                            <el-form-item label="${comment}">
                                <el-radio-group v-model="form.${field}">
                                    <el-radio
                                            v-for="dict in ${field}Options"
                                            :key="dict.dictValue"
                                            #if($column.javaType == "Integer" || $column.javaType == "Long"):label="parseInt(dict.dictValue)"#else:label="dict.dictValue"#end

                                    >{{dict.dictLabel}}</el-radio>
                                </el-radio-group>
                            </el-form-item>
                        #elseif($column.htmlType == "radio" && $dictType)
                            <el-form-item label="${comment}">
                                <el-radio-group v-model="form.${field}">
                                    <el-radio label="1">请选择字典生成</el-radio>
                                </el-radio-group>
                            </el-form-item>
                        #elseif($column.htmlType == "datetime")
                            <el-form-item label="${comment}" prop="${field}">
                                <el-date-picker clearable size="small" style="width: 200px"
                                                v-model="form.${field}"
                                                type="date"
                                                value-format="yyyy-MM-dd"
                                                placeholder="选择${comment}">
                                </el-date-picker>
                            </el-form-item>
                        #elseif($column.htmlType == "textarea")
                            <el-form-item label="${comment}" prop="${field}">
                                <el-input v-model="form.${field}" type="textarea" placeholder="请输入内容" />
                            </el-form-item>
                        #end
                    #end
                #end
            #end
        </el-form>


        <div slot="footer" v-if="!pageDisabled"  class="dialog-footer">
            <el-button type="primary" @click="submitForm">确 定</el-button>
            <el-button @click="cancel">取 消</el-button>
        </div>


    </div>

</template>

<script>
    import { get${BusinessName}, add${BusinessName}, update${BusinessName}  } from "@/api/${moduleName}/${businessName}";
    import Editor from '@/components/Editor';
    export default {
        name: "${BusinessName}DetailBase",
        components: { Editor },
        props: {
            detailDialog: {
                type: Object,
                default: function() {
                    return {
                        // id
                        id: null,
                        open: null,
                        // 是否详情页
                        isDisabled: null,
                    }
                },
            },
        },

        data() {
            return{
                // 表单参数
                form: {},

                #foreach ($column in $columns)
                    #set($parentheseIndex=$column.columnComment.indexOf("（"))
                    #if($parentheseIndex != -1)
                        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                    #else
                        #set($comment=$column.columnComment)
                    #end
                    #if(${column.dictType} != '')
                        // $comment字典
                            ${column.javaField}Options: [],
                    #end
                #end


                // 表单校验
                rules: {
            #foreach ($column in $columns)
                #if($column.required)
                    #set($parentheseIndex=$column.columnComment.indexOf("（"))
                    #if($parentheseIndex != -1)
                        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                    #else
                        #set($comment=$column.columnComment)
                    #end
                    $column.javaField: [
                    { required: true, message: "$comment不能为空", trigger: #if($column.htmlType == "select")"change"#else"blur"#end }
                ]#if($velocityCount != $columns.size()),#end

                #end
            #end
        }
        };
        },
        created(){
            this.initDate();
            this.initDicts();
        },

        computed: {
            pageDisabled: function() {
                return this.detailDialog.isDisabled;
            },
        },

        watch: {
            /* 监听打开状态 */
            "detailDialog.open": function(newOpen, oldOpen) {
                //显示则刷新
                if (newOpen) {
                    console.log(this.$options.name + "监听打开状态", this.detailDialog.id)
                    this.initDate();
                }
            },
        },
        methods: {

            /* 初始化form */
            initDate() {
                if (this.detailDialog.id) {
                    get${BusinessName}(this.detailDialog.id).then(response => {
                        this.form = response.data;
                    });
                } else {
                    //新增页面清空
                    this.form = {};
                }
            },

            /* 加载码表 */
            initDicts(){


                #foreach ($column in $columns)
                    #if(${column.dictType} != '')
                        this.getDicts("${column.dictType}").then(response => {
                            this.${column.javaField}Options = response.data;
                        });
                    #end
                #end


            },

            /** 提交按钮 */
            submitForm() {
                this.#[[$]]#refs["form"].validate(valid => {
                    if (valid) {
                        #foreach ($column in $columns)
                            #if($column.htmlType == "checkbox")
                                this.form.$column.javaField = this.form.${column.javaField}.join(",");
                            #end
                        #end
                        if (this.form.${pkColumn.javaField} != null) {
                            update${BusinessName}(this.form).then(response => {
                                this.msgSuccess("修改成功");
                                this.parentRefresh();
                            });
                        } else {
                            add${BusinessName}(this.form).then(response => {
                                this.msgSuccess("新增成功");
                                this.parentRefresh();
                            });
                        }
                    }
                });
            },
            /* 关闭子页面*/
            cancel() {

                this.detailDialog.open = !this.detailDialog.open
                this.$emit("update:detailDialog", this.detailDialog);
            },

            /* 关闭子页面刷新父页面 */
            parentRefresh() {
                this.cancel();
                this.$emit("doRefresh");
            },



        },

    }
</script>

<style>
</style>
