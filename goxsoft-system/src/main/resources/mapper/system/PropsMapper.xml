<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gox.system.mapper.PropsMapper">
    
    <resultMap type="Props" id="PropsResult">
        <result property="id"    column="id"    />
        <result property="itemId"    column="item_id"    />
        <result property="proId"    column="pro_id"    />
        <result property="children"    column="children"    />
        <result property="multiple"    column="multiple"    />
        <result property="label"    column="label"    />
        <result property="value"    column="value"    />
        <association property="props" column="id" select="selectPropsByProId" />
    </resultMap>

    <sql id="selectPropsVo">
        select id, item_id, pro_id, children, multiple, label, value from props
    </sql>

    <select id="selectPropsList" parameterType="Props" resultMap="PropsResult">
        <include refid="selectPropsVo"/>
        <where>  
            <if test="itemId != null "> and item_id = #{itemId}</if>
            <if test="proId != null "> and pro_id = #{proId}</if>
            <if test="children != null  and children != ''"> and children = #{children}</if>
            <if test="multiple != null "> and multiple = #{multiple}</if>
            <if test="label != null  and label != ''"> and label = #{label}</if>
            <if test="value != null  and value != ''"> and value = #{value}</if>
        </where>
    </select>
    
    <select id="selectPropsById" parameterType="Long" resultMap="PropsResult">
        <include refid="selectPropsVo"/>
        where id = #{id}
    </select>
    <select id="selectPropsByProId" parameterType="Long" resultMap="PropsResult">
        <include refid="selectPropsVo"/>
        where pro_id = #{id}
    </select>
    <select id="selectPropsByItemId" resultMap="PropsResult">
        <include refid="selectPropsVo"/>
        where item_id = #{itemId}
    </select>

    <insert id="insertProps" parameterType="Props">
        insert into props
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="itemId != null">item_id,</if>
            <if test="proId != null">pro_id,</if>
            <if test="children != null">children,</if>
            <if test="multiple != null">multiple,</if>
            <if test="label != null">label,</if>
            <if test="value != null">value,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="itemId != null">#{itemId},</if>
            <if test="proId != null">#{proId},</if>
            <if test="children != null">#{children},</if>
            <if test="multiple != null">#{multiple},</if>
            <if test="label != null">#{label},</if>
            <if test="value != null">#{value},</if>
         </trim>
    </insert>

    <update id="updateProps" parameterType="Props">
        update props
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="proId != null">pro_id = #{proId},</if>
            <if test="children != null">children = #{children},</if>
            <if test="multiple != null">multiple = #{multiple},</if>
            <if test="label != null">label = #{label},</if>
            <if test="value != null">value = #{value},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePropsById" parameterType="Long">
        delete from props where id = #{id}
    </delete>

    <delete id="deletePropsByIds" parameterType="String">
        delete from props where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>