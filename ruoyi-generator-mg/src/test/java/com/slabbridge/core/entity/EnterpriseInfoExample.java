package com.slabbridge.core.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EnterpriseInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public static Criteria newAndCreateCriteria() {
        EnterpriseInfoExample example = new EnterpriseInfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public EnterpriseInfoExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("enterpriseinfo.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("enterpriseinfo.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("enterpriseinfo.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("enterpriseinfo.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("enterpriseinfo.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("enterpriseinfo.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("enterpriseinfo.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("enterpriseinfo.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("enterpriseinfo.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("enterpriseinfo.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("enterpriseinfo.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("enterpriseinfo.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAccountIsNull() {
            addCriterion("enterpriseinfo.account is null");
            return (Criteria) this;
        }

        public Criteria andAccountIsNotNull() {
            addCriterion("enterpriseinfo.account is not null");
            return (Criteria) this;
        }

        public Criteria andAccountEqualTo(String value) {
            addCriterion("enterpriseinfo.account =", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountNotEqualTo(String value) {
            addCriterion("enterpriseinfo.account <>", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountGreaterThan(String value) {
            addCriterion("enterpriseinfo.account >", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.account >=", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountLessThan(String value) {
            addCriterion("enterpriseinfo.account <", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.account <=", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.account <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountLike(String value) {
            addCriterion("enterpriseinfo.account like", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountNotLike(String value) {
            addCriterion("enterpriseinfo.account not like", value, "account");
            return (Criteria) this;
        }

        public Criteria andAccountIn(List<String> values) {
            addCriterion("enterpriseinfo.account in", values, "account");
            return (Criteria) this;
        }

        public Criteria andAccountNotIn(List<String> values) {
            addCriterion("enterpriseinfo.account not in", values, "account");
            return (Criteria) this;
        }

        public Criteria andAccountBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.account between", value1, value2, "account");
            return (Criteria) this;
        }

        public Criteria andAccountNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.account not between", value1, value2, "account");
            return (Criteria) this;
        }

        public Criteria andPwdIsNull() {
            addCriterion("enterpriseinfo.pwd is null");
            return (Criteria) this;
        }

        public Criteria andPwdIsNotNull() {
            addCriterion("enterpriseinfo.pwd is not null");
            return (Criteria) this;
        }

        public Criteria andPwdEqualTo(String value) {
            addCriterion("enterpriseinfo.pwd =", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdNotEqualTo(String value) {
            addCriterion("enterpriseinfo.pwd <>", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThan(String value) {
            addCriterion("enterpriseinfo.pwd >", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.pwd >=", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLessThan(String value) {
            addCriterion("enterpriseinfo.pwd <", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.pwd <=", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.pwd <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPwdLike(String value) {
            addCriterion("enterpriseinfo.pwd like", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotLike(String value) {
            addCriterion("enterpriseinfo.pwd not like", value, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdIn(List<String> values) {
            addCriterion("enterpriseinfo.pwd in", values, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotIn(List<String> values) {
            addCriterion("enterpriseinfo.pwd not in", values, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.pwd between", value1, value2, "pwd");
            return (Criteria) this;
        }

        public Criteria andPwdNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.pwd not between", value1, value2, "pwd");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("enterpriseinfo.`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("enterpriseinfo.`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("enterpriseinfo.`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("enterpriseinfo.`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("enterpriseinfo.`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("enterpriseinfo.`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("enterpriseinfo.`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("enterpriseinfo.`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("enterpriseinfo.`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("enterpriseinfo.`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("enterpriseinfo.`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("enterpriseinfo.`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("enterpriseinfo.`type` =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("enterpriseinfo.`type` <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("enterpriseinfo.`type` >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.`type` >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("enterpriseinfo.`type` <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.`type` <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("enterpriseinfo.`type` like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("enterpriseinfo.`type` not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("enterpriseinfo.`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("enterpriseinfo.`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andPersonScaleIsNull() {
            addCriterion("enterpriseinfo.person_scale is null");
            return (Criteria) this;
        }

        public Criteria andPersonScaleIsNotNull() {
            addCriterion("enterpriseinfo.person_scale is not null");
            return (Criteria) this;
        }

        public Criteria andPersonScaleEqualTo(Integer value) {
            addCriterion("enterpriseinfo.person_scale =", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleNotEqualTo(Integer value) {
            addCriterion("enterpriseinfo.person_scale <>", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleGreaterThan(Integer value) {
            addCriterion("enterpriseinfo.person_scale >", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleGreaterThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.person_scale >=", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleLessThan(Integer value) {
            addCriterion("enterpriseinfo.person_scale <", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleLessThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.person_scale <=", value, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.person_scale <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonScaleIn(List<Integer> values) {
            addCriterion("enterpriseinfo.person_scale in", values, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleNotIn(List<Integer> values) {
            addCriterion("enterpriseinfo.person_scale not in", values, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.person_scale between", value1, value2, "personScale");
            return (Criteria) this;
        }

        public Criteria andPersonScaleNotBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.person_scale not between", value1, value2, "personScale");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIsNull() {
            addCriterion("enterpriseinfo.registered_capital is null");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIsNotNull() {
            addCriterion("enterpriseinfo.registered_capital is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalEqualTo(Float value) {
            addCriterion("enterpriseinfo.registered_capital =", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotEqualTo(Float value) {
            addCriterion("enterpriseinfo.registered_capital <>", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThan(Float value) {
            addCriterion("enterpriseinfo.registered_capital >", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThanOrEqualTo(Float value) {
            addCriterion("enterpriseinfo.registered_capital >=", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThan(Float value) {
            addCriterion("enterpriseinfo.registered_capital <", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThanOrEqualTo(Float value) {
            addCriterion("enterpriseinfo.registered_capital <=", value, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_capital <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalIn(List<Float> values) {
            addCriterion("enterpriseinfo.registered_capital in", values, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotIn(List<Float> values) {
            addCriterion("enterpriseinfo.registered_capital not in", values, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalBetween(Float value1, Float value2) {
            addCriterion("enterpriseinfo.registered_capital between", value1, value2, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredCapitalNotBetween(Float value1, Float value2) {
            addCriterion("enterpriseinfo.registered_capital not between", value1, value2, "registeredCapital");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIsNull() {
            addCriterion("enterpriseinfo.registered_date is null");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIsNotNull() {
            addCriterion("enterpriseinfo.registered_date is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateEqualTo(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date =", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date <>", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThan(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date >", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date >=", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThan(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date <", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date <=", value, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.registered_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRegisteredDateIn(List<Date> values) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date in", values, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date not in", values, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date between", value1, value2, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andRegisteredDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("enterpriseinfo.registered_date not between", value1, value2, "registeredDate");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredIsNull() {
            addCriterion("enterpriseinfo.area_covered is null");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredIsNotNull() {
            addCriterion("enterpriseinfo.area_covered is not null");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredEqualTo(Float value) {
            addCriterion("enterpriseinfo.area_covered =", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredNotEqualTo(Float value) {
            addCriterion("enterpriseinfo.area_covered <>", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredGreaterThan(Float value) {
            addCriterion("enterpriseinfo.area_covered >", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredGreaterThanOrEqualTo(Float value) {
            addCriterion("enterpriseinfo.area_covered >=", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredLessThan(Float value) {
            addCriterion("enterpriseinfo.area_covered <", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredLessThanOrEqualTo(Float value) {
            addCriterion("enterpriseinfo.area_covered <=", value, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.area_covered <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAreaCoveredIn(List<Float> values) {
            addCriterion("enterpriseinfo.area_covered in", values, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredNotIn(List<Float> values) {
            addCriterion("enterpriseinfo.area_covered not in", values, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredBetween(Float value1, Float value2) {
            addCriterion("enterpriseinfo.area_covered between", value1, value2, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andAreaCoveredNotBetween(Float value1, Float value2) {
            addCriterion("enterpriseinfo.area_covered not between", value1, value2, "areaCovered");
            return (Criteria) this;
        }

        public Criteria andLegalPersonIsNull() {
            addCriterion("enterpriseinfo.legal_person is null");
            return (Criteria) this;
        }

        public Criteria andLegalPersonIsNotNull() {
            addCriterion("enterpriseinfo.legal_person is not null");
            return (Criteria) this;
        }

        public Criteria andLegalPersonEqualTo(String value) {
            addCriterion("enterpriseinfo.legal_person =", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonNotEqualTo(String value) {
            addCriterion("enterpriseinfo.legal_person <>", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonGreaterThan(String value) {
            addCriterion("enterpriseinfo.legal_person >", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.legal_person >=", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonLessThan(String value) {
            addCriterion("enterpriseinfo.legal_person <", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.legal_person <=", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.legal_person <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLegalPersonLike(String value) {
            addCriterion("enterpriseinfo.legal_person like", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonNotLike(String value) {
            addCriterion("enterpriseinfo.legal_person not like", value, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonIn(List<String> values) {
            addCriterion("enterpriseinfo.legal_person in", values, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonNotIn(List<String> values) {
            addCriterion("enterpriseinfo.legal_person not in", values, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.legal_person between", value1, value2, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andLegalPersonNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.legal_person not between", value1, value2, "legalPerson");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("enterpriseinfo.email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("enterpriseinfo.email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("enterpriseinfo.email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("enterpriseinfo.email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("enterpriseinfo.email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("enterpriseinfo.email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.email <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("enterpriseinfo.email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("enterpriseinfo.email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("enterpriseinfo.email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("enterpriseinfo.email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andPhoneNoIsNull() {
            addCriterion("enterpriseinfo.phone_no is null");
            return (Criteria) this;
        }

        public Criteria andPhoneNoIsNotNull() {
            addCriterion("enterpriseinfo.phone_no is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneNoEqualTo(String value) {
            addCriterion("enterpriseinfo.phone_no =", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoNotEqualTo(String value) {
            addCriterion("enterpriseinfo.phone_no <>", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoGreaterThan(String value) {
            addCriterion("enterpriseinfo.phone_no >", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.phone_no >=", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoLessThan(String value) {
            addCriterion("enterpriseinfo.phone_no <", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.phone_no <=", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.phone_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhoneNoLike(String value) {
            addCriterion("enterpriseinfo.phone_no like", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoNotLike(String value) {
            addCriterion("enterpriseinfo.phone_no not like", value, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoIn(List<String> values) {
            addCriterion("enterpriseinfo.phone_no in", values, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoNotIn(List<String> values) {
            addCriterion("enterpriseinfo.phone_no not in", values, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.phone_no between", value1, value2, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andPhoneNoNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.phone_no not between", value1, value2, "phoneNo");
            return (Criteria) this;
        }

        public Criteria andStreetIsNull() {
            addCriterion("enterpriseinfo.street is null");
            return (Criteria) this;
        }

        public Criteria andStreetIsNotNull() {
            addCriterion("enterpriseinfo.street is not null");
            return (Criteria) this;
        }

        public Criteria andStreetEqualTo(Integer value) {
            addCriterion("enterpriseinfo.street =", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNotEqualTo(Integer value) {
            addCriterion("enterpriseinfo.street <>", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThan(Integer value) {
            addCriterion("enterpriseinfo.street >", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.street >=", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThan(Integer value) {
            addCriterion("enterpriseinfo.street <", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetLessThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.street <=", value, "street");
            return (Criteria) this;
        }

        public Criteria andStreetLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetIn(List<Integer> values) {
            addCriterion("enterpriseinfo.street in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotIn(List<Integer> values) {
            addCriterion("enterpriseinfo.street not in", values, "street");
            return (Criteria) this;
        }

        public Criteria andStreetBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.street between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNotBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.street not between", value1, value2, "street");
            return (Criteria) this;
        }

        public Criteria andStreetNameIsNull() {
            addCriterion("enterpriseinfo.street_name is null");
            return (Criteria) this;
        }

        public Criteria andStreetNameIsNotNull() {
            addCriterion("enterpriseinfo.street_name is not null");
            return (Criteria) this;
        }

        public Criteria andStreetNameEqualTo(String value) {
            addCriterion("enterpriseinfo.street_name =", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameNotEqualTo(String value) {
            addCriterion("enterpriseinfo.street_name <>", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameGreaterThan(String value) {
            addCriterion("enterpriseinfo.street_name >", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.street_name >=", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameLessThan(String value) {
            addCriterion("enterpriseinfo.street_name <", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.street_name <=", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.street_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStreetNameLike(String value) {
            addCriterion("enterpriseinfo.street_name like", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameNotLike(String value) {
            addCriterion("enterpriseinfo.street_name not like", value, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameIn(List<String> values) {
            addCriterion("enterpriseinfo.street_name in", values, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameNotIn(List<String> values) {
            addCriterion("enterpriseinfo.street_name not in", values, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.street_name between", value1, value2, "streetName");
            return (Criteria) this;
        }

        public Criteria andStreetNameNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.street_name not between", value1, value2, "streetName");
            return (Criteria) this;
        }

        public Criteria andIsKeypointIsNull() {
            addCriterion("enterpriseinfo.is_keypoint is null");
            return (Criteria) this;
        }

        public Criteria andIsKeypointIsNotNull() {
            addCriterion("enterpriseinfo.is_keypoint is not null");
            return (Criteria) this;
        }

        public Criteria andIsKeypointEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint =", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointNotEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint <>", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointGreaterThan(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint >", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointGreaterThanOrEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint >=", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointLessThan(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint <", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointLessThanOrEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_keypoint <=", value, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_keypoint <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsKeypointIn(List<Byte> values) {
            addCriterion("enterpriseinfo.is_keypoint in", values, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointNotIn(List<Byte> values) {
            addCriterion("enterpriseinfo.is_keypoint not in", values, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointBetween(Byte value1, Byte value2) {
            addCriterion("enterpriseinfo.is_keypoint between", value1, value2, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andIsKeypointNotBetween(Byte value1, Byte value2) {
            addCriterion("enterpriseinfo.is_keypoint not between", value1, value2, "isKeypoint");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNull() {
            addCriterion("enterpriseinfo.province is null");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNotNull() {
            addCriterion("enterpriseinfo.province is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceEqualTo(Integer value) {
            addCriterion("enterpriseinfo.province =", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceNotEqualTo(Integer value) {
            addCriterion("enterpriseinfo.province <>", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThan(Integer value) {
            addCriterion("enterpriseinfo.province >", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.province >=", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThan(Integer value) {
            addCriterion("enterpriseinfo.province <", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.province <=", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.province <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceIn(List<Integer> values) {
            addCriterion("enterpriseinfo.province in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotIn(List<Integer> values) {
            addCriterion("enterpriseinfo.province not in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.province between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.province not between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("enterpriseinfo.city is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("enterpriseinfo.city is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(Integer value) {
            addCriterion("enterpriseinfo.city =", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(Integer value) {
            addCriterion("enterpriseinfo.city <>", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(Integer value) {
            addCriterion("enterpriseinfo.city >", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.city >=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityLessThan(Integer value) {
            addCriterion("enterpriseinfo.city <", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.city <=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.city <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCityIn(List<Integer> values) {
            addCriterion("enterpriseinfo.city in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<Integer> values) {
            addCriterion("enterpriseinfo.city not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.city between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.city not between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andDistrictIsNull() {
            addCriterion("enterpriseinfo.district is null");
            return (Criteria) this;
        }

        public Criteria andDistrictIsNotNull() {
            addCriterion("enterpriseinfo.district is not null");
            return (Criteria) this;
        }

        public Criteria andDistrictEqualTo(Integer value) {
            addCriterion("enterpriseinfo.district =", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictNotEqualTo(Integer value) {
            addCriterion("enterpriseinfo.district <>", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictGreaterThan(Integer value) {
            addCriterion("enterpriseinfo.district >", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictGreaterThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.district >=", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictLessThan(Integer value) {
            addCriterion("enterpriseinfo.district <", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictLessThanOrEqualTo(Integer value) {
            addCriterion("enterpriseinfo.district <=", value, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.district <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistrictIn(List<Integer> values) {
            addCriterion("enterpriseinfo.district in", values, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictNotIn(List<Integer> values) {
            addCriterion("enterpriseinfo.district not in", values, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.district between", value1, value2, "district");
            return (Criteria) this;
        }

        public Criteria andDistrictNotBetween(Integer value1, Integer value2) {
            addCriterion("enterpriseinfo.district not between", value1, value2, "district");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("enterpriseinfo.address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("enterpriseinfo.address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("enterpriseinfo.address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("enterpriseinfo.address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("enterpriseinfo.address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("enterpriseinfo.address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("enterpriseinfo.address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("enterpriseinfo.address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("enterpriseinfo.address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("enterpriseinfo.address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andLogoImageIsNull() {
            addCriterion("enterpriseinfo.logo_image is null");
            return (Criteria) this;
        }

        public Criteria andLogoImageIsNotNull() {
            addCriterion("enterpriseinfo.logo_image is not null");
            return (Criteria) this;
        }

        public Criteria andLogoImageEqualTo(String value) {
            addCriterion("enterpriseinfo.logo_image =", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageNotEqualTo(String value) {
            addCriterion("enterpriseinfo.logo_image <>", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageGreaterThan(String value) {
            addCriterion("enterpriseinfo.logo_image >", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.logo_image >=", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageLessThan(String value) {
            addCriterion("enterpriseinfo.logo_image <", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.logo_image <=", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.logo_image <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogoImageLike(String value) {
            addCriterion("enterpriseinfo.logo_image like", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageNotLike(String value) {
            addCriterion("enterpriseinfo.logo_image not like", value, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageIn(List<String> values) {
            addCriterion("enterpriseinfo.logo_image in", values, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageNotIn(List<String> values) {
            addCriterion("enterpriseinfo.logo_image not in", values, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.logo_image between", value1, value2, "logoImage");
            return (Criteria) this;
        }

        public Criteria andLogoImageNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.logo_image not between", value1, value2, "logoImage");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("enterpriseinfo.created_by is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("enterpriseinfo.created_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(String value) {
            addCriterion("enterpriseinfo.created_by =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(String value) {
            addCriterion("enterpriseinfo.created_by <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(String value) {
            addCriterion("enterpriseinfo.created_by >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.created_by >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(String value) {
            addCriterion("enterpriseinfo.created_by <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.created_by <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedByLike(String value) {
            addCriterion("enterpriseinfo.created_by like", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotLike(String value) {
            addCriterion("enterpriseinfo.created_by not like", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<String> values) {
            addCriterion("enterpriseinfo.created_by in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<String> values) {
            addCriterion("enterpriseinfo.created_by not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.created_by between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.created_by not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("enterpriseinfo.created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("enterpriseinfo.created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("enterpriseinfo.created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("enterpriseinfo.created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("enterpriseinfo.created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("enterpriseinfo.created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("enterpriseinfo.created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("enterpriseinfo.created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.created_at <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("enterpriseinfo.created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("enterpriseinfo.created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("enterpriseinfo.created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("enterpriseinfo.created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIsNull() {
            addCriterion("enterpriseinfo.updated_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIsNotNull() {
            addCriterion("enterpriseinfo.updated_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedByEqualTo(String value) {
            addCriterion("enterpriseinfo.updated_by =", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotEqualTo(String value) {
            addCriterion("enterpriseinfo.updated_by <>", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThan(String value) {
            addCriterion("enterpriseinfo.updated_by >", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.updated_by >=", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThan(String value) {
            addCriterion("enterpriseinfo.updated_by <", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.updated_by <=", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedByLike(String value) {
            addCriterion("enterpriseinfo.updated_by like", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotLike(String value) {
            addCriterion("enterpriseinfo.updated_by not like", value, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByIn(List<String> values) {
            addCriterion("enterpriseinfo.updated_by in", values, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotIn(List<String> values) {
            addCriterion("enterpriseinfo.updated_by not in", values, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.updated_by between", value1, value2, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedByNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.updated_by not between", value1, value2, "updatedBy");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("enterpriseinfo.updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("enterpriseinfo.updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("enterpriseinfo.updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("enterpriseinfo.updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("enterpriseinfo.updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("enterpriseinfo.updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("enterpriseinfo.updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("enterpriseinfo.updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.updated_at <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("enterpriseinfo.updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("enterpriseinfo.updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("enterpriseinfo.updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("enterpriseinfo.updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedByIsNull() {
            addCriterion("enterpriseinfo.deleted_by is null");
            return (Criteria) this;
        }

        public Criteria andDeletedByIsNotNull() {
            addCriterion("enterpriseinfo.deleted_by is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedByEqualTo(String value) {
            addCriterion("enterpriseinfo.deleted_by =", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByNotEqualTo(String value) {
            addCriterion("enterpriseinfo.deleted_by <>", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByGreaterThan(String value) {
            addCriterion("enterpriseinfo.deleted_by >", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.deleted_by >=", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByLessThan(String value) {
            addCriterion("enterpriseinfo.deleted_by <", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.deleted_by <=", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.deleted_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedByLike(String value) {
            addCriterion("enterpriseinfo.deleted_by like", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByNotLike(String value) {
            addCriterion("enterpriseinfo.deleted_by not like", value, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByIn(List<String> values) {
            addCriterion("enterpriseinfo.deleted_by in", values, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByNotIn(List<String> values) {
            addCriterion("enterpriseinfo.deleted_by not in", values, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.deleted_by between", value1, value2, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andDeletedByNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.deleted_by not between", value1, value2, "deletedBy");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("enterpriseinfo.is_deleted is null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("enterpriseinfo.is_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_deleted =", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_deleted <>", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThan(Byte value) {
            addCriterion("enterpriseinfo.is_deleted >", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_deleted >=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThan(Byte value) {
            addCriterion("enterpriseinfo.is_deleted <", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Byte value) {
            addCriterion("enterpriseinfo.is_deleted <=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.is_deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDeletedIn(List<Byte> values) {
            addCriterion("enterpriseinfo.is_deleted in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotIn(List<Byte> values) {
            addCriterion("enterpriseinfo.is_deleted not in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedBetween(Byte value1, Byte value2) {
            addCriterion("enterpriseinfo.is_deleted between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotBetween(Byte value1, Byte value2) {
            addCriterion("enterpriseinfo.is_deleted not between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andBizParkIsNull() {
            addCriterion("enterpriseinfo.biz_park is null");
            return (Criteria) this;
        }

        public Criteria andBizParkIsNotNull() {
            addCriterion("enterpriseinfo.biz_park is not null");
            return (Criteria) this;
        }

        public Criteria andBizParkEqualTo(String value) {
            addCriterion("enterpriseinfo.biz_park =", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkNotEqualTo(String value) {
            addCriterion("enterpriseinfo.biz_park <>", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkGreaterThan(String value) {
            addCriterion("enterpriseinfo.biz_park >", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.biz_park >=", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkLessThan(String value) {
            addCriterion("enterpriseinfo.biz_park <", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.biz_park <=", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.biz_park <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBizParkLike(String value) {
            addCriterion("enterpriseinfo.biz_park like", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkNotLike(String value) {
            addCriterion("enterpriseinfo.biz_park not like", value, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkIn(List<String> values) {
            addCriterion("enterpriseinfo.biz_park in", values, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkNotIn(List<String> values) {
            addCriterion("enterpriseinfo.biz_park not in", values, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.biz_park between", value1, value2, "bizPark");
            return (Criteria) this;
        }

        public Criteria andBizParkNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.biz_park not between", value1, value2, "bizPark");
            return (Criteria) this;
        }

        public Criteria andQualificationIsNull() {
            addCriterion("enterpriseinfo.qualification is null");
            return (Criteria) this;
        }

        public Criteria andQualificationIsNotNull() {
            addCriterion("enterpriseinfo.qualification is not null");
            return (Criteria) this;
        }

        public Criteria andQualificationEqualTo(String value) {
            addCriterion("enterpriseinfo.qualification =", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationNotEqualTo(String value) {
            addCriterion("enterpriseinfo.qualification <>", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationGreaterThan(String value) {
            addCriterion("enterpriseinfo.qualification >", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.qualification >=", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationLessThan(String value) {
            addCriterion("enterpriseinfo.qualification <", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.qualification <=", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.qualification <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andQualificationLike(String value) {
            addCriterion("enterpriseinfo.qualification like", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationNotLike(String value) {
            addCriterion("enterpriseinfo.qualification not like", value, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationIn(List<String> values) {
            addCriterion("enterpriseinfo.qualification in", values, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationNotIn(List<String> values) {
            addCriterion("enterpriseinfo.qualification not in", values, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.qualification between", value1, value2, "qualification");
            return (Criteria) this;
        }

        public Criteria andQualificationNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.qualification not between", value1, value2, "qualification");
            return (Criteria) this;
        }

        public Criteria andBusinessIsNull() {
            addCriterion("enterpriseinfo.business is null");
            return (Criteria) this;
        }

        public Criteria andBusinessIsNotNull() {
            addCriterion("enterpriseinfo.business is not null");
            return (Criteria) this;
        }

        public Criteria andBusinessEqualTo(String value) {
            addCriterion("enterpriseinfo.business =", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessNotEqualTo(String value) {
            addCriterion("enterpriseinfo.business <>", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessGreaterThan(String value) {
            addCriterion("enterpriseinfo.business >", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.business >=", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLessThan(String value) {
            addCriterion("enterpriseinfo.business <", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.business <=", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.business <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessLike(String value) {
            addCriterion("enterpriseinfo.business like", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessNotLike(String value) {
            addCriterion("enterpriseinfo.business not like", value, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessIn(List<String> values) {
            addCriterion("enterpriseinfo.business in", values, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessNotIn(List<String> values) {
            addCriterion("enterpriseinfo.business not in", values, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.business between", value1, value2, "business");
            return (Criteria) this;
        }

        public Criteria andBusinessNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.business not between", value1, value2, "business");
            return (Criteria) this;
        }

        public Criteria andNatureIsNull() {
            addCriterion("enterpriseinfo.nature is null");
            return (Criteria) this;
        }

        public Criteria andNatureIsNotNull() {
            addCriterion("enterpriseinfo.nature is not null");
            return (Criteria) this;
        }

        public Criteria andNatureEqualTo(String value) {
            addCriterion("enterpriseinfo.nature =", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureNotEqualTo(String value) {
            addCriterion("enterpriseinfo.nature <>", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThan(String value) {
            addCriterion("enterpriseinfo.nature >", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.nature >=", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureLessThan(String value) {
            addCriterion("enterpriseinfo.nature <", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.nature <=", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.nature <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNatureLike(String value) {
            addCriterion("enterpriseinfo.nature like", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotLike(String value) {
            addCriterion("enterpriseinfo.nature not like", value, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureIn(List<String> values) {
            addCriterion("enterpriseinfo.nature in", values, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotIn(List<String> values) {
            addCriterion("enterpriseinfo.nature not in", values, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.nature between", value1, value2, "nature");
            return (Criteria) this;
        }

        public Criteria andNatureNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.nature not between", value1, value2, "nature");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIsNull() {
            addCriterion("enterpriseinfo.credit_code is null");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIsNotNull() {
            addCriterion("enterpriseinfo.credit_code is not null");
            return (Criteria) this;
        }

        public Criteria andCreditCodeEqualTo(String value) {
            addCriterion("enterpriseinfo.credit_code =", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotEqualTo(String value) {
            addCriterion("enterpriseinfo.credit_code <>", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThan(String value) {
            addCriterion("enterpriseinfo.credit_code >", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.credit_code >=", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThan(String value) {
            addCriterion("enterpriseinfo.credit_code <", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.credit_code <=", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.credit_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreditCodeLike(String value) {
            addCriterion("enterpriseinfo.credit_code like", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotLike(String value) {
            addCriterion("enterpriseinfo.credit_code not like", value, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeIn(List<String> values) {
            addCriterion("enterpriseinfo.credit_code in", values, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotIn(List<String> values) {
            addCriterion("enterpriseinfo.credit_code not in", values, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.credit_code between", value1, value2, "creditCode");
            return (Criteria) this;
        }

        public Criteria andCreditCodeNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.credit_code not between", value1, value2, "creditCode");
            return (Criteria) this;
        }

        public Criteria andMarketNameIsNull() {
            addCriterion("enterpriseinfo.market_name is null");
            return (Criteria) this;
        }

        public Criteria andMarketNameIsNotNull() {
            addCriterion("enterpriseinfo.market_name is not null");
            return (Criteria) this;
        }

        public Criteria andMarketNameEqualTo(String value) {
            addCriterion("enterpriseinfo.market_name =", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameNotEqualTo(String value) {
            addCriterion("enterpriseinfo.market_name <>", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameNotEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameGreaterThan(String value) {
            addCriterion("enterpriseinfo.market_name >", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameGreaterThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameGreaterThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.market_name >=", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameGreaterThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameLessThan(String value) {
            addCriterion("enterpriseinfo.market_name <", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameLessThanColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameLessThanOrEqualTo(String value) {
            addCriterion("enterpriseinfo.market_name <=", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameLessThanOrEqualToColumn(EnterpriseInfo.Column column) {
            addCriterion(new StringBuilder("enterpriseinfo.market_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarketNameLike(String value) {
            addCriterion("enterpriseinfo.market_name like", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameNotLike(String value) {
            addCriterion("enterpriseinfo.market_name not like", value, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameIn(List<String> values) {
            addCriterion("enterpriseinfo.market_name in", values, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameNotIn(List<String> values) {
            addCriterion("enterpriseinfo.market_name not in", values, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.market_name between", value1, value2, "marketName");
            return (Criteria) this;
        }

        public Criteria andMarketNameNotBetween(String value1, String value2) {
            addCriterion("enterpriseinfo.market_name not between", value1, value2, "marketName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table el_enterprise_info
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 12 11:40:32 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        private EnterpriseInfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        protected Criteria(EnterpriseInfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        public EnterpriseInfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andIsDeletedEqualTo(EnterpriseInfo.IsDeleted.IS_DELETED.value()) : andIsDeletedNotEqualTo(EnterpriseInfo.IsDeleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table el_enterprise_info
             *
             * @mbg.generated Mon Apr 12 11:40:32 CST 2021
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table el_enterprise_info
     *
     * @mbg.generated Mon Apr 12 11:40:32 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table el_enterprise_info
         *
         * @mbg.generated Mon Apr 12 11:40:32 CST 2021
         */
        void example(EnterpriseInfoExample example);
    }
}